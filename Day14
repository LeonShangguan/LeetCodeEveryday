# https://leetcode.com/problems/power-of-two/

# Java Version
class Solution {
    public boolean isPowerOfTwo(int n) {
        if(n<1){
            return false;
        }
        while(n/2 != 0){
            if(n%2 != 0){
                return false;
            }
            n = n/2;
        }
        return true;
    }
}

# Python Version
import math
class Solution:
    def isPowerOfTwo(self, n: int) -> bool:
        if(n<=0):
            return False
        while(n != 1):
            if(n%2 != 0):
                return False
            n = math.floor(n/2)
        return True



# https://leetcode.com/problems/ugly-number/

# Java Version
class Solution {
    public boolean isUgly(int num) {
        if(num<=0){
            return false;
        }
        while(num%2 == 0){
            num /= 2;
        }
        while(num%3 == 0){
            num /= 3;
        }
        while(num%5 == 0){
            num /= 5;
        }
        if(num==1){
            return true;
        }
        return false;
    }
}

# Python Version
class Solution:
    def isUgly(self, num: int) -> bool:
        if(num<=0):
            return False;
        while(num%2 == 0):
            num /= 2
        while(num%3 == 0):
            num/= 3
        while(num%5 == 0):
            num/=5
        if(num==1):
            return True
        return False



