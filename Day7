# https://leetcode.com/problems/move-zeroes/

# Python Version
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        i, j = 0, -1
        while((i-j)<=len(nums)):
            if(nums[i]==0):
                for m in range(i, len(nums)+j):
                    nums[m] = nums[m+1]
                nums[j] = 0
                j -= 1
                i -= 1
            i += 1
               
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        zeros = 0
        rst = []
        for x in nums:
            if x == 0:
                zeros += 1
            else:
                rst.append(x)
        for x in range(zeros):
            rst.append(0)
        for i in range(len(nums)):
            nums[i] = rst[i]

# Java Version
class Solution {
    public void moveZeroes(int[] nums) {
        int k=0;
        for(int i=0; i<nums.length; i++){
            if(nums[i] == 0){
                continue;
            }else{
                nums[k]=nums[i];
                k++;
            }
        }
        for(; k<nums.length; k++){
            nums[k] = 0;
        }
    }
}

class Solution {
    public void moveZeroes(int[] nums) {
        int k=0;
        for(int i=0; i<nums.length; i++){
            if(nums[i] != 0){
                nums[k++]=nums[i];
            }
        }
        for(; k<nums.length; k++){
            nums[k] = 0;
        }
    }
}
           


